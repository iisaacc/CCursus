
services:
  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    image: inception-mariadb
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - my_network

  nginx:
    container_name: nginx
    build: ./requirements/nginx
    env_file: .env
    image: inception-nginx
    ports:
      - "8080:443" # Mapea el puerto 443 de mi host para redirigirlo al 443 del container
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - my_network
    depends_on:
      - mariadb
  
  wordpress:
    container_name: wordpress
    build: ./requirements/wordpress
    env_file: .env
    environment:
      WP_DB_NAME: ${WP_DB_NAME}
      WP_DB_HOST: ${WP_DB_HOST}
      WP_DB_USER: ${WP_DB_USER}
      WP_DB_PASSWORD: ${WP_DB_PASSWORD}
      WP_URL: ${WP_URL}
      WP_TITLE: ${WP_TITLE}
      WP_ADMIN_USER: ${WP_ADMIN_USER}
      WP_ADMIN_PASSWORD: ${WP_ADMIN_PASSWORD}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
    networks:
      - my_network
    depends_on:
      - mariadb
    volumes:
      - wordpress_data:/var/www/html
    ports:
      - "9000:9000"

# De forma predeterminada se crea un espacio de nombres de red personalizado con el
# controlador Bridge que crea una red interna con una ip Ãºnica por contenedor.
networks:
  my_network:
    driver: bridge
  
volumes:
  db_data:
    name: db_data
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/isporras/data/mariadb'

  wordpress_data:
    name: wordpress_data
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/isporras/data/wordpress'